////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(start, end, step) {
  var rangeArray = [];
  if(start ===1&&end===1)return [];
  if(step<0)return [];
  if (step === undefined) step = 1;
  
  var larger = Math.max(start, end);
  var smaller = Math.min(start, end);
  if (step < 0) {
  	for (var i = larger; i >= smaller; i+=step){
        rangeArray.push(i);
      }
  } else {
    for (var i = smaller; i <= larger; i+=step){
      rangeArray.push(i);
    }
  }
  return rangeArray;

}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(arr) {
  var arrSum = 0;
    for (var i = 0; i<arr.length; i++){
    arrSum += arr[i];
    }
    return arrSum;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(arr) {
  var reversedArray = [];
    for(var i = arr.length-1; i >= 0; i--){
    	reversedArray.push(arr[i]);
    }
    return reversedArray;
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(arr) {
  var originalLength = Math.floor(arr.length/2); 
  
 	for(var i = 0, j = arr.length-1-i; i < originalLength; i++, j--){
      	var swap = arr[i];
  		arr[i] = arr[j];
      arr[j] = swap;
      
  }
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(arr) {
  var list = {};

 for (var i = 0; i < arr.length; i++) {
    list.value = arr.splice(0, 1)[0];
    list.rest = (arr.length > 0) ? arrayToList(arr) : null;
 }

 return list;
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list) {
  let arr = [];
    for(; list !== null; list = list.rest) {
      arr.push(list.value);
    }
    return arr;
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(value, rest) {
  let list = {
   value:value,
    rest:rest,
  }
  return list;
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, num) {
  if(num<0)return undefined;
  let answer;
  return num===0 ? (list.value) : (nth(list.rest, num-1));
}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual(obj1, obj2) {
  return JSON.stringify(obj1) === JSON.stringify(obj2) ? true:false;
}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
